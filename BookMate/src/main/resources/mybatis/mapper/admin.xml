<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-/mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.human.springboot.AdminController.AdminDAO">
	<!-- 상품 -->
	<select id="prolist"
		resultType="com.human.springboot.AdminController.AdminDTO">
		select book_num, book_name, AUTHOR, book_price, book_genre, EMOTION, RATING
		from Book
		ORDER BY book_genre
	</select>
	<select id="book_nameCheck"
		resultType="com.human.springboot.AdminController.AdminDTO">
		select*from Book
	</select>
	<insert id="newProduct">
		insert into Book (book_num, book_name, book_price,
		book_genre, book_content,
		author,publication,rating,emotion,book_summary,book_cover,
		book_detail)
		values (book_num.nextval, #{param1}, #{param2},
		#{param3},#{param4},#{param5},
		#{param6},#{param7},#{param8},#{param9}, '0','0')
	</insert>
	<update id="newUrl">
		update Book set book_cover=#{param1} where
		book_name=#{param2}
	</update>
	<update id="newUrlC">
		update Book set book_detail=#{param1} where
		book_name=#{param2}
	</update>
	<select id="viewPro"
		resultType="com.human.springboot.AdminController.AdminDTO">
		select book_num, book_name, book_price, book_genre, book_cover,
		book_content,
		book_detail, AUTHOR, publication, rating, EMOTION, book_summary
		from Book
		where book_num=#{param1}
	</select>
	<update id="updatePro">
		update Book set book_name=#{param2},
		book_price=#{param3}, book_genre=#{param4}, book_content=#{param5},
		author=#{param6},publication=#{param7},rating=#{param8},emotion=#{param9},book_summary=#{param10}
		where book_num=#{param1}
	</update>
	<update id="updateUrl">
		update Book set book_cover=#{param1} where
		book_num=#{param2}
	</update>
	<update id="updateUrlC">
		update Book set book_detail=#{param1} where
		book_num=#{param2}
	</update>
	<delete id="proDelete">
		delete from Book where book_num=#{param1}
	</delete>
	<select id="pSearch"
		resultType="com.human.springboot.AdminController.AdminDTO">
		SELECT book_num, book_name, AUTHOR, book_price, book_genre, EMOTION,RATING
		FROM Book
		where ${param1} like '%'||#{param2}||'%'

		ORDER BY book_num DESC
	</select>
	<!-- 회원 -->
	<select id="memlist"
		resultType="com.human.springboot.AdminController.AdminDTO">
		select id, name, email, address, mobile, birth, regdate
		from member
		ORDER BY name
	</select>
	<select id="mSearch"
		resultType="com.human.springboot.AdminController.AdminDTO">
		SELECT id, name, email, address, mobile, birth, regdate
		FROM member
		where ${param1} like '%'||#{param2}||'%'

		ORDER BY name DESC
	</select>
<!-- 	회원삭제 -->
	
	<delete id="mcdel">
		delete from cart where id= #{param1}
	</delete>
	<delete id="model">
		delete from ordered_cart where o_id= #{param1}
	</delete>
	<delete id="mpdel">
		delete from payment where id= #{param1}
	</delete>
	<delete id="mrdel">
		delete from review where id= #{param1}
	</delete>
	<delete id="mbdel">
		delete from board where id= #{param1}
	</delete>
	<delete id="mbcdel">
		delete from board_comment where id= #{param1}
	</delete>
	<delete id="mdel">
		delete from member where id= #{param1}
	</delete>
	<!-- 리뷰 -->
	<select id="revlist"
		resultType="com.human.springboot.AdminController.AdminDTO">
		select a.review_num, a.id, b.book_name, a.rev_title,
		a.rev_content, a.rev_create_date
		from review a, book b
		where a.book_num = b.book_num
		order by review_num
	</select>
	<delete id="reviewDel" parameterType="Integer">
		delete from review where
		review_num = #{param1}
	</delete>
	<select id="rSearch"
		resultType="com.human.springboot.AdminController.AdminDTO">
		select a.review_num, a.id, b.book_name, a.rev_title, a.rev_content,
		a.rev_create_date
		from review a, book b
		where a.book_num = b.book_num
		and ${param1} like '%'||#{param2}||'%'
		order by review_num

	</select>
	<!-- 주문 -->
	<select id="orlist"
		resultType="com.human.springboot.AdminController.AdminDTO">
		SELECT order_num, cart_num, id, price, order_date, pay_way,	status
		FROM (
		SELECT order_num, cart_num, id, price, order_date, pay_way, status,
		ROW_NUMBER() OVER (PARTITION BY id, order_date, pay_way, price, status
		ORDER BY order_date DESC) AS rn
		FROM payment
		) sub
		WHERE rn = 1
		ORDER BY order_date DESC
	</select>
	<select id="oSearch" resultType="com.human.springboot.AdminController.AdminDTO">
		 SELECT order_num, cart_num, id, price, order_date, pay_way,	status
		FROM (
		SELECT order_num, cart_num, id, price, order_date, pay_way, status,
		ROW_NUMBER() OVER (PARTITION BY id, order_date, pay_way, price, status
		ORDER BY order_date DESC) AS rn
		FROM payment
		) sub
		WHERE rn = 1
        and ${param1} like '%'||#{param2}||'%'
		ORDER BY order_date DESC
	</select>
	<select id="dorder" resultType="com.human.springboot.AdminController.AdminDTO">
		SELECT
			p.name,
			p.id,
			p.price,
			p.order_date,
			p.address,
			p.mobile,
			p.deli_message,
			p.status,
			LISTAGG(oc.o_qty, ', ') WITHIN GROUP (ORDER BY
			oc.o_qty) AS o_qty,
			LISTAGG(b.book_name, ', ') WITHIN GROUP (ORDER BY
			b.book_name) AS book_name
		FROM
			payment p
		JOIN ordered_cart oc ON
			p.cart_num = oc.o_cart_num
		JOIN book b ON oc.o_book_num = b.book_num
		WHERE
			p.id = #{param1} AND
			p.price = #{param2}
		GROUP BY
			p.name,
			p.id,
			p.price,
			p.order_date,
			p.address,
			p.mobile,
			p.deli_message,
			p.status
		</select>
<!-- 	배송상태 -->
		<update id="delivery">
			UPDATE payment
			SET status = #{param1}
			WHERE ORDER_DATE = (
			    SELECT ORDER_DATE
			    FROM payment
			    WHERE ORDER_NUM = #{param3} AND id = #{param2}
				)
		</update>
<!-- 		주문 삭제payment,ordered_cart,review -->
		<delete id="oreviewDel" >
			DELETE FROM review
			WHERE order_num IN (
			SELECT order_num
			FROM payment
			WHERE ORDER_NUM = #{param1} AND id = #{param2}
			)
		</delete>
		<delete id="ordered_cart" >
			DELETE FROM ordered_cart
			WHERE o_cart_num IN (
		    SELECT cart_num
		    FROM payment
		    WHERE ORDER_NUM = #{param1} AND id = #{param2}
			)
		</delete>
		<delete id="payment" >
			DELETE FROM payment
			WHERE ORDER_DATE = (
		    SELECT ORDER_DATE
		    FROM payment
		    WHERE ORDER_NUM = #{param1} AND id = #{param2}
			)
		</delete>
</mapper>
